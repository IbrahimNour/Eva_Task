{"version":3,"file":"ngx-number-spinner.js","sources":["ngx-number-spinner/lib/ngx-number-spinner/ngx-number-spinner.component.ts","ngx-number-spinner/lib/ngx-number-spinner.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAiBa,yBAAyB;AAAG,IAcvC;AAAgB,QAbA,UAAK,GAAW,CAAC,CAAC;AACpC,QAAiB,SAAI,GAAW,CAAC,CAAC;AAClC,QAEsB,cAAS,GAA4B,YAAY,CAAC;AACxE,QACoB,WAAM,GAAyB,IAAI,YAAY,EAAE,CAAC;AACtE,QAGE,qBAAgB;AAAQ;AACZ;AACd,QAFyB,SAAQ,EAAC;AAClC,KAEmB;AACnB;AACO;AAAwB;AACf;AAAQ,IADtB,UAAU,CAAC,KAAY;AAAI,QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;AAC5B,KAAG;AACH;AACO;AAAqB;AACf;AAAQ,IADnB,gBAAgB,CAAC,EAAM;AAAI,QACzB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC/B,KAAG;AACH;AACO;AAAqB;AAChB;AAAQ,IADlB,iBAAiB,CAAC,EAAM;AAAI,QAC1B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACzB,KAAG;AACH;AACO;AAA6B;AAC5B;AAAQ,IADd,gBAAgB,CAAE,UAAkB;AAAI,QACtC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC/B,KAAG;AACH;AACO;AACI;AAAQ,IADjB,GAAG;AAAK,QACN,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;AAC5B,QAAI,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AACH;AACO;AACI;AAAQ,IADjB,GAAG;AAAK,QACN,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;AAC5B,QACI,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,KAAG;AACH;AACO;AAAgB;AACV;AAAQ,IADX,SAAS;AAAK,QACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,QACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,KAAG;AACH;qDA9DC,SAAS,SAAC,kBACT,QAAQ,EAAK,oBAAoB;MACjC;;;;;;;;;kBAAkD,kBAIlD;CAAS,EAAE,sBACT;IACE,OAAO,EAAE,iBAAiB,0BAC1B,WAAW,EAAE,UAAU;;cAAC,MAAM;CAAyB,EAAC,0BACxD,KAAK,EAAE;AAAI,sBACZ;AACF;;;;;;;;;;;;;;;;;;;;;;;;;qkBACF,+uDACG;AAAC;AAAmB;AACpB;AACQ,oBADT,KAAK,SAAC,OAAO;AAAO,mBACpB,KAAK,SAAC,MAAM;AAAO,kBACnB,KAAK,SAAC,KAAK;AAAO,kBAClB,KAAK,SAAC,KAAK;AAAO,wBAClB,KAAK,SAAC,WAAW;AAAO,qBAExB,MAAM,SAAC,QAAQ;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC;AAAI;AAAkC;AAI1C;AASjB;ACrCP,MAiBa,sBAAsB;AAAG;kDAXrC,QAAQ,SAAC,kBACR,YAAY,EAAE,sBACZ;wBAAyB,kBAC1B,kBACD,OAAO,EAAE,sBACP;aAAyB,kBAC1B,kBACD,OAAO,EAAE,sBACP;UAAY;GACb;EACF;;;;;;;;;;;;;;gTACI;AAAC;AAAC;AAAI;AACN;AAAiC;AAAsI;AAAI;AAAC;AAAI;AAAkC;AAAyC;AAAsI;AAAI;AAAC;;ADlBA,AAiBA,AAAA,AAcA,AAbxBA,AAiBA,AAAA,AAXA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AACA","sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n"]}